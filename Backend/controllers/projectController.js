const Project = require('../models/Project');

exports.getProjects = async (req, res) => {
    try {
        // --- ADD LOG HERE TO SEE WHAT GETS FETCHED ---
        console.log("Attempting to fetch all projects...");
        const projects = await Project.find({});
        console.log("Fetched projects:", projects); // See the data fetched from DB
        res.json(projects);
    } catch (err) {
        console.error('Error fetching projects:', err); // Log fetch errors
        res.status(500).json({ error: 'Server error' });
    }
};

exports.getProjectById = async (req, res) => {
    try {
        console.log(`Attempting to fetch project by ID: ${req.params.id}`);
        const project = await Project.findById(req.params.id);
        if (!project) {
            console.log(`Project with ID ${req.params.id} not found.`);
            return res.status(404).json({ error: 'Project not found' });
        }
        console.log("Fetched project by ID:", project);
        res.json(project);
    } catch (err) {
        console.error('Error fetching project by ID:', err);
        res.status(500).json({ error: 'Server error' });
    }
};

exports.createProject = async (req, res) => {
    // --- STEP 1: LOG THE INCOMING REQUEST BODY ---
    console.log("--- createProject function called ---");
    console.log("Incoming request body:", req.body); // This shows what your frontend sent

    const { name, company, email, contactNumber, idea } = req.body;

    if (!name || !email || !contactNumber || !idea) {
        // --- LOG IF VALIDATION FAILS ---
        console.log("Validation failed: Missing required fields.");
        return res.status(400).json({ error: 'Name, Email, Contact Number, and Idea are required' });
    }

    try {
        // --- STEP 2: LOG THE PROJECT INSTANCE BEFORE SAVING ---
        const newProject = new Project({ name, company, email, contactNumber, idea });
        console.log("New Project instance created:", newProject); // This shows what Mongoose is about to save

        // --- STEP 3: LOG BEFORE AND AFTER THE SAVE OPERATION ---
        console.log("Attempting to save project to database...");
        const saved = await newProject.save(); // Perform the save operation
        console.log("Project saved successfully to database:", saved); // THIS IS KEY: It should have an _id if successful
        console.log("Saved Project ID:", saved._id); // The unique ID generated by MongoDB

        res.status(201).json(saved);
        console.log("Response sent to client.");

    } catch (err) {
        // --- STEP 4: CATCH AND LOG ANY ERRORS DURING SAVE ---
        console.error('Error saving project to database:', err); // THIS IS CRITICAL for seeing database errors
        res.status(500).json({ error: 'Server error' });
        console.log("Error response sent to client.");
    } finally {
        console.log("--- createProject function finished ---");
    }
};